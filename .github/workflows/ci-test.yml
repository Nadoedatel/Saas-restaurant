name: Build, Test, and Deploy

on:
  push:
    branches:
      - master # Для одной ветки лучше использовать дефис

jobs:
  build:
    runs-on: ubuntu-latest
    steps: # <-- Правильный отступ для steps
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Или 'lts/*' для последней LTS версии

      - name: Install modules
        run: npm ci # 'npm ci' предпочтительнее для CI/CD, так как он гарантирует чистую установку по lock-файлу
        working-directory: ./apps/frontend/ # <-- Указываем директорию для этого шага

      - name: Build frontend
        run: npm run build # <-- Заменяем 'dev' на 'build' для создания продакшн-сборки
        working-directory: ./apps/frontend/ # <-- Указываем директорию для этого шага

      # Дополнительно: Шаг для запуска тестов
      - name: Run tests
        run: npm test # Или другую команду для запуска ваших тестов
        working-directory: ./apps/frontend/

  # Если вы хотите активировать этот пайплайн позже, уберите символ '#' перед ним.
  # Например, если вам нужна отдельная сборка для Node.js 17.x
  # pinepline:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [ 17.x ]
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Set up Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - name: Install modules
  #       run: npm ci
  #       working-directory: ./apps/frontend/
  #     - name: Build frontend
  #       run: npm run build
  #       working-directory: ./apps/frontend/
  #     - name: Run tests
  #       run: npm test
  #       working-directory: ./apps/frontend/